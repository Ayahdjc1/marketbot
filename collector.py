
from telethon import TelegramClient, events
from datetime import datetime
from database import insert_engagement_data, create_engagement_table
from config import API_TOKEN
# === –ó–ê–ú–ï–ù–ò –Ω–∞ —Å–≤–æ—ë ===
api_id = 
api_hash = ''
channel = ''  # ID –∏–ª–∏ username –∫–∞–Ω–∞–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä 'my_channel'

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞)
create_engagement_table()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telethon-–∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient('telethon_session', api_id, api_hash).start(bot_token=API_TOKEN)


@client.on(events.NewMessage(chats=channel))
async def handler(event):
    msg = event.message
    post_id = str(msg.id)
    date = msg.date.isoformat() 
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    likes = msg.views or 0
    shares = msg.forwards or 0
    comments = msg.replies.replies if msg.replies else 0

    # –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    insert_engagement_data(
        post_id=post_id,
        likes=likes,
        comments=comments,
        shares=shares,
        channel=str(event.chat_id),
        date=date
    )
    print(f"[‚úì] –ü–æ—Å—Ç {post_id} —Å–æ—Ö—Ä–∞–Ω—ë–Ω ({likes} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, {comments} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, {shares} —Ä–µ–ø–æ—Å—Ç–æ–≤)")
import logging
logging.basicConfig(level=logging.INFO, format="%(asctime)s - COLLECTOR - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)
logger.info("collector.py —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

if __name__ == '__main__':
    print("üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...")
    client.start()
    print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ. –û–∂–∏–¥–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞ {channel}...\n")
    client.run_until_disconnected()

    
    
